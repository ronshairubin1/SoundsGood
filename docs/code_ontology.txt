Code Ontology - SoundClassifier v09

1. Core Models
src/core/models/base.py
    class BaseModel
        --> def preprocess_audio()
        --> def train()
        --> def predict()

src/core/models/cnn.py
    class CNNModel (inherits BaseModel)
        --> def build_model()
        --> def train()
        --> def predict()
        --> def preprocess_audio()

src/core/models/rf.py
    class RFModel (inherits BaseModel)
        --> def train()
        --> def predict()
        --> def extract_features()

src/core/models/ensemble.py
    class EnsembleModel (inherits BaseModel)
        --> def train()
        --> def predict()
        Uses: CNNModel, RFModel

2. Audio Processing
src/core/audio/processor.py
    class AudioProcessor
        --> def process_audio()
        --> def extract_features()
        --> def normalize_audio()

3. ML Components
src/ml/audio_processing.py
    --> def process_audio_for_cnn()
    --> def process_audio_for_rf()
    Uses: AudioProcessor

src/ml/feature_extractor.py
    class FeatureExtractor
        --> def extract_mfcc()
        --> def extract_spectral_features()
    Uses: audio_processing.py

src/ml/trainer.py
    class ModelTrainer
        --> def train_model()
        --> def validate_model()
        --> def save_model()
    Uses: CNNClassifier, RFClassifier, FeatureExtractor

src/ml/inference.py
    class InferenceEngine
        --> def predict()
        --> def batch_predict()
    Uses: CNNModel, RFModel, EnsembleModel

4. Services Layer
src/services/training_service.py
    class TrainingService
        --> def train_model_async()
        --> def get_training_status()
    Uses: ModelTrainer, DictionaryService

src/services/inference_service.py
    class InferenceService
        --> def predict()
        --> def get_prediction_stats()
    Uses: InferenceEngine, DictionaryService

src/services/dictionary_service.py
    class DictionaryService
        --> def get_dictionary()
        --> def update_dictionary()
        --> def validate_sounds()

src/services/user_service.py
    class UserService
        --> def authenticate()
        --> def register()
        --> def get_user_stats()

5. API Layer
src/api/ml_api.py
    --> @route('/api/ml/train')
    --> @route('/api/ml/predict')
    Uses: TrainingService, InferenceService

src/api/dictionary_api.py
    --> @route('/api/dictionary')
    Uses: DictionaryService

src/api/user_api.py
    --> @route('/api/user')
    Uses: UserService

src/api/dashboard_api.py
    --> @route('/api/dashboard')
    Uses: TrainingService, InferenceService

6. Routes Layer
src/routes/ml_routes.py
    --> @route('/train')
    --> @route('/predict')
    Uses: ml_api.py, dictionary_api.py
    Templates: train_model.html, predict.html

src/routes/train_app.py
    --> @route('/training')
    --> @route('/models')
    Uses: training_service.py, dictionary_service.py
    Templates: training.html, model_summary.html

7. Data Flow
User Request
    --> Routes Layer
        --> API Layer
            --> Services Layer
                --> ML Components
                    --> Core Components
                        --> Results
                            --> Services Layer
                                --> API Layer
                                    --> Routes Layer
                                        --> Templates
                                            --> User Response

8. Template Structure
templates/
├── base.html                    # Base template with common layout
├── model_management/
│   ├── model_summary.html      # Model details and statistics
│   ├── model_status.html       # Training status and progress
│   └── train_model.html        # Training interface
├── sound_management/
│   ├── sounds_management.html  # Sound file management
│   ├── upload_sounds.html     # Sound upload interface
│   └── record.html            # Sound recording interface
├── dictionary_management/
│   ├── dictionary_manager.html # Dictionary CRUD operations
│   └── manage_dictionaries.html # Dictionary list and management
├── analytics/
│   ├── view_analysis.html     # Analysis results
│   └── inference_statistics.html # Prediction statistics
└── user_interface/
    ├── dashboard.html         # Main user dashboard
    ├── login.html            # User login
    └── register.html         # User registration 